/**
 * Configuration de Test pour le Syst√®me de S√©curit√© Routi√®re
 * 
 * Ce fichier centralise toutes les variables temporelles du syst√®me de s√©curit√© routi√®re
 * pour faciliter les tests et √©viter d'oublier de remettre les vraies valeurs en production.
 * 
 * IMPORTANT: Avant de d√©ployer en production, s'assurer que IS_TEST_MODE = false
 */

export class SafetyTestConfig {
  // ‚ö†Ô∏è MODE TEST - Mettre √† false pour la production
  public static readonly IS_TEST_MODE = false;

  // üïê SEUIL DE D√âCLENCHEMENT DU MODAL DE S√âCURIT√â
  // Production: 120 minutes (2 heures)
  // Test: 5 minutes pour d√©clencher facilement
  public static readonly LONG_TRIP_THRESHOLD_MINUTES = SafetyTestConfig.IS_TEST_MODE ? 5 : 120;

  // ‚è∞ D√âLAI DU RAPPEL DE PAUSE
  // Production: 2 heures (7200 secondes)
  // Test: 10 secondes pour voir rapidement le rappel
  public static readonly REMINDER_DELAY_SECONDS = SafetyTestConfig.IS_TEST_MODE ? 10 : 7200;

  // üîÑ D√âLAI DU RAPPEL R√âP√âT√â (quand on ignore)
  // Production: 2 heures (7200 secondes)
  // Test: 10 secondes pour tester les rappels r√©p√©t√©s
  public static readonly REPEATED_REMINDER_DELAY_SECONDS = SafetyTestConfig.IS_TEST_MODE ? 10 : 7200;

  // üìù MESSAGES INFORMATIFS
  public static getConfigInfo(): string {
    return `
üöó Configuration Syst√®me de S√©curit√© Routi√®re:
- Mode: ${SafetyTestConfig.IS_TEST_MODE ? 'TEST' : 'PRODUCTION'}
- Seuil long trajet: ${SafetyTestConfig.LONG_TRIP_THRESHOLD_MINUTES} minutes
- D√©lai rappel: ${SafetyTestConfig.REMINDER_DELAY_SECONDS} secondes
- D√©lai rappel r√©p√©t√©: ${SafetyTestConfig.REPEATED_REMINDER_DELAY_SECONDS} secondes
    `;
  }

  // üîß FONCTIONS UTILITAIRES
  /**
   * Convertit le d√©lai de rappel en millisecondes
   */
  public static getReminderDelayMs(): number {
    return SafetyTestConfig.REMINDER_DELAY_SECONDS * 1000;
  }

  /**
   * Convertit le d√©lai de rappel r√©p√©t√© en millisecondes
   */
  public static getRepeatedReminderDelayMs(): number {
    return SafetyTestConfig.REPEATED_REMINDER_DELAY_SECONDS * 1000;
  }

  /**
   * V√©rifie si une dur√©e de trajet d√©clenche le modal de s√©curit√©
   */
  public static shouldShowSafetyModal(durationInMinutes: number): boolean {
    return durationInMinutes > SafetyTestConfig.LONG_TRIP_THRESHOLD_MINUTES;
  }

  /**
   * Formate la dur√©e pour l'affichage dans le modal
   */
  public static formatDuration(durationInMinutes: number): string {
    const hours = Math.floor(durationInMinutes / 60);
    const minutes = durationInMinutes % 60;
    return `${hours}h${String(minutes).padStart(2, '0')}`;
  }

  /**
   * Log de diagnostic pour v√©rifier la configuration
   */
  public static logConfiguration(): void {
  console.log('üîß ' + SafetyTestConfig.getConfigInfo());
  if (SafetyTestConfig.IS_TEST_MODE) {
    console.warn('‚ö†Ô∏è ATTENTION: Mode test activ√© - Ne pas d√©ployer en production');
    console.log('üß™ En mode test: POI recherch√©s √† 10 minutes (0.17h) de votre position future');
  } else {
    console.log('üöó En mode production: POI recherch√©s √† 2h de votre position future');
  }
}
}

// üìã CHECKLIST AVANT PRODUCTION:
// [ ] V√©rifier que IS_TEST_MODE = false
// [ ] V√©rifier que LONG_TRIP_THRESHOLD_MINUTES = 120
// [ ] V√©rifier que REMINDER_DELAY_SECONDS = 7200
// [ ] V√©rifier que REPEATED_REMINDER_DELAY_SECONDS = 7200
// [ ] Tester avec un trajet de plus de 2h r√©elles
// [ ] V√©rifier que les rappels arrivent apr√®s 2h r√©elles
